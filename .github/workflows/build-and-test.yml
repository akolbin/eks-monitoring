name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  terraform-validate:
    name: Terraform Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0

    - name: Terraform Format Check
      run: terraform fmt -check -recursive terraform/

    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend=false

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

  helm-lint:
    name: Helm Chart Linting
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.13.0'

    - name: Add Helm repositories
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add fluent https://fluent.github.io/helm-charts
        helm repo update

    - name: Helm Dependency Update
      run: |
        cd helm/monitoring-stack
        helm dependency update

    - name: Helm Lint
      run: |
        cd helm/monitoring-stack
        helm lint .
        helm lint . -f values-prod.yaml

    - name: Helm Template Test
      run: |
        cd helm/monitoring-stack
        helm template test-release . --debug --dry-run
        helm template test-release . -f values-prod.yaml --debug --dry-run

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  yaml-lint:
    name: YAML Linting
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install yamllint
      run: pip install yamllint

    - name: Run yamllint
      run: |
        yamllint -d relaxed helm/
        yamllint -d relaxed .github/workflows/

  kubernetes-validate:
    name: Kubernetes Manifest Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.13.0'

    - name: Add Helm repositories
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add fluent https://fluent.github.io/helm-charts
        helm repo update

    - name: Validate Helm templates (syntax check)
      run: |
        cd helm/monitoring-stack
        helm dependency update

        # Test template rendering without CRD validation
        echo "Testing default values..."
        helm template test-release . --debug --dry-run > /dev/null

        echo "Testing prod values..."
        helm template test-release . -f values-prod.yaml --debug --dry-run > /dev/null

        echo "All Helm templates rendered successfully!"

    - name: Validate YAML syntax
      run: |
        cd helm/monitoring-stack

        # Check for basic YAML syntax issues
        helm template test-release . | \
        python3 -c "
        import yaml
        import sys
        try:
            for doc in yaml.safe_load_all(sys.stdin):
                if doc is not None:
                    pass
            print('✅ All YAML documents are valid')
        except yaml.YAMLError as e:
            print(f'❌ YAML validation failed: {e}')
            sys.exit(1)
        "
